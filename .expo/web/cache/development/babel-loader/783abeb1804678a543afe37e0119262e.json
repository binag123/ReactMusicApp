{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport _ from 'lodash';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar API_KEY = '05800d55eamsh896e3311b03f357p1acc36jsn2f43f188326e';\nvar axiosInstance = axios.create({\n  baseURL: 'https://deezerdevs-deezer.p.rapidapi.com/',\n  timeout: 2000,\n  headers: {\n    'x-rapidapi-key': API_KEY\n  }\n});\nexport var searchTracks = function searchTracks(singerName) {\n  return axiosInstance.get(\"search?q=\" + singerName).then(function (response) {\n    var album = response.data.data.map(function (item) {\n      return item.album;\n    });\n\n    var uniqueAlbum = _.uniqBy(album, 'title');\n\n    return uniqueAlbum;\n  });\n};\nexport var getAlbumTracks = function getAlbumTracks(albumId) {\n  return axiosInstance.get(\"album/\" + albumId).then(function (response) {\n    return response.data.tracks.data;\n  });\n};\nexport var storeData = function storeData(key, value) {\n  var stringifyValue;\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          stringifyValue = JSON.stringify(value);\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, stringifyValue));\n\n        case 4:\n          return _context.abrupt(\"return\", value);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 7]]);\n};\nexport var retrieveData = function retrieveData(key) {\n  var value;\n  return _regeneratorRuntime.async(function retrieveData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!(value !== null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", JSON.parse(value));\n\n        case 6:\n          _context2.next = 10;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\nexport var clearStorage = function clearStorage() {\n  return _regeneratorRuntime.async(function clearStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 3:\n          return _context3.abrupt(\"return\", true);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]]);\n};","map":{"version":3,"sources":["C:/Users/user/Documents/MusicPlayer/actions/index.js"],"names":["axios","_","API_KEY","axiosInstance","create","baseURL","timeout","headers","searchTracks","singerName","get","then","response","album","data","map","item","uniqueAlbum","uniqBy","getAlbumTracks","albumId","tracks","storeData","key","value","stringifyValue","JSON","stringify","AsyncStorage","setItem","retrieveData","getItem","parse","clearStorage","clear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,IAAMC,OAAO,GAAG,oDAAhB;AACA,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa;AACnCC,EAAAA,OAAO,EAAE,2CAD0B;AAEnCC,EAAAA,OAAO,EAAE,IAF0B;AAGnCC,EAAAA,OAAO,EAAE;AAAC,sBAAiBL;AAAlB;AAH0B,CAAb,CAAtB;AAMA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU,EAAI;AACzC,SAAON,aAAa,CAACO,GAAd,eAA8BD,UAA9B,EAA4CE,IAA5C,CACP,UAAAC,QAAQ,EAAI;AAER,QAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACH,KAAf;AAAA,KAAvB,CAAd;;AACD,QAAMI,WAAW,GAAGhB,CAAC,CAACiB,MAAF,CAASL,KAAT,EAAgB,OAAhB,CAApB;;AACA,WAAOI,WAAP;AACH,GANO,CAAP;AAOA,CARM;AAUP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EACrC;AACI,SAAOjB,aAAa,CAACO,GAAd,YAA2BU,OAA3B,EAAsCT,IAAtC,CAA2C,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACE,IAAT,CAAcO,MAAd,CAAqBP,IAAzB;AAAA,GAAnD,CAAP;AACH,CAHM;AAKP,OAAO,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,cADe,GACEC,IAAI,CAACC,SAAL,CAAeH,KAAf,CADF;AAAA;AAAA;AAAA,2CAIbI,YAAY,CAACC,OAAb,CAAqBN,GAArB,EAA0BE,cAA1B,CAJa;;AAAA;AAAA,2CAKZD,KALY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAYL,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJK,YAAY,CAACG,OAAb,CAAqBR,GAArB,CAFI;;AAAA;AAElBC,UAAAA,KAFkB;;AAAA,gBAIpBA,KAAK,KAAK,IAJU;AAAA;AAAA;AAAA;;AAAA,4CAMfE,IAAI,CAACM,KAAL,CAAWR,KAAX,CANe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAcP,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAElBL,YAAY,CAACM,KAAb,EAFkB;;AAAA;AAAA,4CAGjB,IAHiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport { AsyncStorage } from 'react-native';\n\nconst API_KEY = '05800d55eamsh896e3311b03f357p1acc36jsn2f43f188326e';\nconst axiosInstance = axios.create({\nbaseURL: 'https://deezerdevs-deezer.p.rapidapi.com/',\ntimeout: 2000,\nheaders: {'x-rapidapi-key':API_KEY}\n});\n\nexport const searchTracks = singerName => {\n return axiosInstance.get(`search?q=${singerName}`).then(\n response => {\n\n     const album = response.data.data.map((item) => item.album);\n    const uniqueAlbum = _.uniqBy(album, 'title');\n    return uniqueAlbum;\n})\n}\n\nexport const getAlbumTracks = albumId =>\n{\n    return axiosInstance.get(`album/${albumId}`).then(response => response.data.tracks.data)\n}\n\nexport const storeData = async (key, value) => {\n    const stringifyValue = JSON.stringify(value);\n  \n    try {\n      await AsyncStorage.setItem(key, stringifyValue);\n      return value;\n    } catch (error) {\n      // Error saving data\n    }\n  }\n  \n  \n  export const retrieveData = async (key) => {\n    try {\n      const value = await AsyncStorage.getItem(key);\n  \n      if (value !== null) {\n  \n        return JSON.parse(value);\n      }\n     } catch (error) {\n       // Error retrieving data\n     }\n  }\n  \n  \n  export const clearStorage = async () => {\n    try {\n      await AsyncStorage.clear();\n      return true;\n    } catch (error) {\n      // Error saving data\n    }\n  }"]},"metadata":{},"sourceType":"module"}