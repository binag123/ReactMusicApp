{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\MusicPlayer\\\\screens\\\\SettingsScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport { ExpoConfigView } from '@expo/samples';\n\nvar SettingsScreen = function (_React$Component) {\n  _inherits(SettingsScreen, _React$Component);\n\n  function SettingsScreen() {\n    _classCallCheck(this, SettingsScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SettingsScreen).apply(this, arguments));\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Storage\",\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Storage');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        }\n      }), React.createElement(ExpoConfigView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SettingsScreen;\n}(React.Component);\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json'\n};\nexport { SettingsScreen as default };","map":{"version":3,"sources":["C:/Users/user/Documents/MusicPlayer/screens/SettingsScreen.js"],"names":["React","Button","ExpoConfigView","SettingsScreen","props","navigation","navigate","Component","navigationOptions","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;;IAEqBC,c;;;;;;;;;;;6BAKV;AAAA;;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,CAAN;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAdyCN,KAAK,CAACO,S;;AAA7BJ,c,CACZK,iB,GAAoB;AACzBC,EAAAA,KAAK,EAAE;AADkB,C;SADRN,c","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { ExpoConfigView } from '@expo/samples';\n\nexport default class SettingsScreen extends React.Component {\n  static navigationOptions = {\n    title: 'app.json',\n  };\n\n  render() {\n    /* Go ahead and delete ExpoConfigView and replace it with your\n     * content, we just wanted to give you a quick view of your config */\n    return (\n      <React.Fragment>\n        <Button title='Storage' onPress={() => this.props.navigation.navigate('Storage')} />\n        <ExpoConfigView />\n      </React.Fragment>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}