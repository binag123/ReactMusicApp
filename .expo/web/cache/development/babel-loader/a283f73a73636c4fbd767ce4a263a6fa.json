{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\MusicPlayer\\\\components\\\\CardList.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Button, Text } from 'react-native-elements';\nexport var CardList = function (_React$Component) {\n  _inherits(CardList, _React$Component);\n\n  function CardList() {\n    _classCallCheck(this, CardList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardList).apply(this, arguments));\n  }\n\n  _createClass(CardList, [{\n    key: \"renderData\",\n    value: function renderData() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          imageKey = _this$props.imageKey,\n          titleKey = _this$props.titleKey,\n          buttonText = _this$props.buttonText,\n          bottomView = _this$props.bottomView;\n      return data.map(function (item, index) {\n        return React.createElement(Card, {\n          key: index,\n          title: item[titleKey],\n          image: {\n            uri: item[imageKey]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          }\n        }, bottomView(item));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n\n      if (data && data.length > 0) {\n        return this.renderData();\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }, \"Loading Data...\"));\n      }\n    }\n  }]);\n\n  return CardList;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/user/Documents/MusicPlayer/components/CardList.js"],"names":["React","Card","Button","Text","CardList","props","data","imageKey","titleKey","buttonText","bottomView","map","item","index","uri","length","renderData","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,uBAAlC;AAEA,WAAaC,QAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAEiB;AAAA,wBAC+C,KAAKC,KADpD;AAAA,UACFC,IADE,eACFA,IADE;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACqBC,UADrB,eACqBA,UADrB;AAAA,UACiCC,UADjC,eACiCA,UADjC;AAET,aAAQJ,IAAI,CAACK,GAAL,CAAU,UAACC,IAAD,EAAOC,KAAP,EACd;AACI,eACE,oBAAC,IAAD;AACA,UAAA,GAAG,EAAEA,KADL;AAEA,UAAA,KAAK,EAAED,IAAI,CAACJ,QAAD,CAFX;AAGA,UAAA,KAAK,EAAE;AAACM,YAAAA,GAAG,EAAEF,IAAI,CAACL,QAAD;AAAV,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA,WAKCG,UAAU,CAACE,IAAD,CALX,CADF;AAUH,OAZG,CAAR;AAaK;AAjBb;AAAA;AAAA,6BAmBY;AAAA,UACWN,IADX,GACmB,KAAKD,KADxB,CACWC,IADX;;AAEI,UAAGA,IAAI,IAAIA,IAAI,CAACS,MAAL,GAAc,CAAzB,EACA;AACI,eAAO,KAAKC,UAAL,EAAP;AACH,OAHD,MAII;AACA,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAN,CAAP;AACH;AAEJ;AA7Bb;;AAAA;AAAA,EAA8BhB,KAAK,CAACiB,SAApC","sourcesContent":["import React from 'react';\nimport {View} from 'react-native';\nimport {Card, Button, Text } from 'react-native-elements';\n\nexport class CardList extends React.Component\n{\n    renderData() {\n        const {data,imageKey,titleKey,buttonText, bottomView} = this.props;\n        return  data.map ((item, index) =>\n            {\n                return (\n                  <Card \n                  key={index}\n                  title={item[titleKey]}\n                  image={{uri: item[imageKey]}}>\n                  \n                  {bottomView(item)}\n                </Card>\n      \n            )\n            })         \n            }\n            render()\n            {\n                const {data} = this.props;\n                if(data && data.length > 0)\n                {\n                    return this.renderData();\n                }\n                else{\n                    return <View><Text>Loading Data...</Text></View>\n                }\n                \n            }\n\n\n}"]},"metadata":{},"sourceType":"module"}